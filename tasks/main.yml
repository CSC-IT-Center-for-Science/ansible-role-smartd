---
# tasks file for ansible-role-smartd

- include_tasks: install.yml
  when: (smartd_service|bool and ansible_virtualization_role != "guest") or (ansible_virtualization_type == "docker")

# If DELL = do some workaround
# If smartd_monitor_all_found_disks is True - add all from smartctl --scan
# If smartd_monitor_all_found_disks is False - use the smartd.conf from the package and its DEVICESCAN

- name: debug print ansible_devices.sda.vendor if verbosity is one or higher
  debug:
    var: ansible_devices.sda.vendor
    verbosity: 1
  when: ansible_devices.sda is defined

- name: grab list of devices by running smartctl --scan
  command: "/usr/sbin/smartctl --scan"
  register: smart_list_of_devices
  check_mode: no
  changed_when: False
  when: smartd_service|bool and ansible_connection != 'chroot'

## Populate smartd.conf
- include_tasks: dell.yml
  when:
    - ansible_devices.sda is defined
    - ansible_devices.sda.vendor == "DELL"
    - smartd_service
    - ansible_virtualization_role != "guest"

- include_tasks: generic.yml
  when:
    - smartd_monitor_all_found_disks|bool
    - smartd_service|bool
    - ansible_virtualization_role != "guest"
##

- name: enable smartd service
  service: name=smartd enabled={{ smartd_service_enabled }} state={{ smartd_service_state }}
  when:
    - smartd_service|bool
    - ansible_virtualization_role != "guest"
    - ansible_connection != 'chroot'

- name: enable smartd service in chroot
  command: systemctl enable smartd
  when:
    - smartd_service|bool
    - smartd_service_enabled == 'yes'
    - ansible_connection == 'chroot'
